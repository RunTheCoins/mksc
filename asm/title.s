    .include "asm/macros.inc"

    .syntax unified
    .text

    thumb_func_start sub_80001D8
    sub_80001D8:
        push {r4, r5, r6, lr}
        add sp, #-0x00C
        adds r6, r0, #0x0
        movs r5, #0x00
    _080001E0:
        lsls r0, r5, #0x02
        adds r0, r0, r5
        lsls r0, r0, #0x02
        adds r0, #0x38
        adds r4, r6, r0
        ldr r0, [r4, #0x0C]
        cmp r0, #0x07
        bls _080001F2
        b _080002E0
    _080001F2:
        lsls r0, r0, #0x02
        ldr r1, _080001FC @ =0x08000200
        adds r0, r0, r1
        ldr r0, [r0, #0x00]
        mov pc, r0
    _080001FC: .4byte 0x08000200
        .byte 0xE0, 0x02, 0x00, 0x08, 0xE0, 0x02, 0x00, 0x08, 0x20, 0x02, 0x00, 0x08, 0x4C, 0x02, 0x00, 0x08
        .byte 0x5C, 0x02, 0x00, 0x08, 0x78, 0x02, 0x00, 0x08, 0xA4, 0x02, 0x00, 0x08, 0xB4, 0x02, 0x00, 0x08
        .byte 0x09, 0x4A, 0x69, 0x00, 0x49, 0x19, 0x89, 0x00, 0x10, 0x1D, 0x08, 0x18, 0x00, 0x68, 0x78, 0x30
        .byte 0x20, 0x60, 0x08, 0x32, 0x89, 0x18, 0x08, 0x68, 0x50, 0x30, 0x60, 0x60, 0x00, 0x20, 0xA0, 0x60
        .byte 0x20, 0x61, 0x03, 0x20, 0x4B, 0xE0, 0x00, 0x00, 0xF8, 0x8D, 0x0D, 0x08, 0x02, 0x48, 0x00, 0x78
        .byte 0x00, 0x28, 0x45, 0xD0, 0x04, 0x20, 0x42, 0xE0, 0xF0, 0x69, 0x00, 0x03, 0x20, 0x69, 0x42, 0x1C
        .byte 0x22, 0x61, 0x10, 0x2A, 0x05, 0xDC, 0x80, 0x21, 0x49, 0x00, 0x05, 0x20, 0x00, 0x90, 0x40, 0x20
        .byte 0x2C, 0xE0, 0x00, 0x20, 0x20, 0x61, 0x2E, 0xE0, 0x09, 0x4A, 0x69, 0x00, 0x49, 0x19, 0x89, 0x00
        .byte 0x10, 0x1D, 0x08, 0x18, 0x00, 0x68, 0x78, 0x30, 0x20, 0x60, 0x08, 0x32, 0x89, 0x18, 0x08, 0x68
        .byte 0x50, 0x30, 0x60, 0x60, 0x00, 0x20, 0xA0, 0x60, 0x20, 0x61, 0x06, 0x20, 0x1F, 0xE0, 0x00, 0x00
        .byte 0xF8, 0x8D, 0x0D, 0x08, 0x02, 0x48, 0x00, 0x78, 0x01, 0x28, 0x19, 0xD9, 0x07, 0x20, 0x16, 0xE0
        .byte 0xF0, 0x69, 0x00, 0x03, 0x20, 0x69, 0x43, 0x1C, 0x23, 0x61, 0x10, 0x2B, 0x0B, 0xDC, 0x80, 0x20
        .byte 0xC0, 0x00, 0x80, 0x21, 0x49, 0x00, 0x09, 0x22, 0x00, 0x92, 0x1A, 0x1C, 0x10, 0x23, 0x0E, 0xF0
        .byte 0x2F, 0xFB, 0xA0, 0x60, 0x04, 0xE0, 0x80, 0x20, 0x40, 0x00, 0xA0, 0x60, 0x01, 0x20, 0xE0, 0x60
    _080002E0:
        adds r5, #0x01
        cmp r5, #0x02
        bgt _080002E8
        b _080001E0
    _080002E8:
        movs r5, #0x00
        ldr r4, _08000310 @ =0x080D8DF8
    _080002EC:
        movs r0, #0x02
        subs r0, r0, r5
        lsls r1, r0, #0x02
        adds r1, r1, r0
        lsls r1, r1, #0x02
        adds r1, #0x38
        adds r2, r6, r1
        ldr r0, [r2, #0x08]
        cmp r0, #0x00
        beq _08000340
        ldr r0, [r2, #0x0C]
        cmp r0, #0x04
        beq _08000318
        cmp r0, #0x04
        bgt _08000314
        cmp r0, #0x01
        beq _08000318
        b _08000340
    _08000310: .4byte 0x080D8DF8
    _08000314:
        cmp r0, #0x07
        bne _08000340
    _08000318:
        ldrh r1, [r2, #0x04]
        lsls r1, r1, #0x10
        ldrh r0, [r2, #0x00]
        orrs r0, r1
        str r0, [sp, #0x008]
        movs r1, #0x02
        subs r1, r1, r5
        lsls r0, r1, #0x01
        adds r0, r0, r1
        lsls r0, r0, #0x02
        adds r0, r0, r4
        ldr r0, [r0, #0x00]
        ldr r3, [r2, #0x08]
        movs r1, #0x00
        str r1, [sp, #0x000]
        str r1, [sp, #0x004]
        add r1, sp, #0x008
        adds r2, r3, #0x0
        bl oam_renderCellData
    _08000340:
        adds r5, #0x01
        cmp r5, #0x02
        ble _080002EC
        add sp, #0x00C
        pop {r4, r5, r6}
        pop {r0}
        bx r0
        .byte 0x00, 0x00
        thumb_func_start sub_8000350
    sub_8000350:
        push {r4, r5, r6, r7, lr}
        mov r7, r10
        mov r6, r9
        mov r5, r8
        push {r5, r6, r7}
        add sp, #-0x01C
        adds r6, r0, #0x0
        movs r1, #0x90
        lsls r1, r1, #0x01
        adds r0, r6, r1
        movs r2, #0x92
        lsls r2, r2, #0x01
        adds r1, r6, r2
        ldr r2, [r0, #0x00]
        ldr r0, [r1, #0x00]
        cmp r2, r0
        beq _080003B4
        cmp r2, #0x00
        beq _08000388
        movs r0, #0x9A
        lsls r0, r0, #0x01
        adds r2, r6, r0
        adds r0, #0x04
        adds r1, r6, r0
        movs r0, #0x9C
        str r0, [r1, #0x00]
        str r0, [r2, #0x00]
        b _080003A4
    _08000388:
        movs r1, #0x9A
        lsls r1, r1, #0x01
        adds r3, r6, r1
        movs r0, #0x9C
        lsls r0, r0, #0x01
        adds r2, r6, r0
        subs r1, #0x18
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        lsls r1, r1, #0x04
        movs r0, #0x9C
        subs r0, r0, r1
        str r0, [r2, #0x00]
        str r0, [r3, #0x00]
    _080003A4:
        movs r2, #0x98
        lsls r2, r2, #0x01
        adds r0, r6, r2
        movs r1, #0x00
        str r1, [r0, #0x00]
        adds r2, #0x0C
        adds r0, r6, r2
        str r1, [r0, #0x00]
    _080003B4:
        movs r0, #0x92
        lsls r0, r0, #0x01
        adds r1, r6, r0
        subs r0, #0x04
        adds r2, r6, r0
        ldr r0, [r2, #0x00]
        str r0, [r1, #0x00]
        movs r1, #0x98
        lsls r1, r1, #0x01
        adds r3, r6, r1
        ldr r0, [r3, #0x00]
        cmp r0, #0x01
        beq _080003D8
        cmp r0, #0x01
        ble _0800048C
        cmp r0, #0x02
        beq _080003F6
        b _0800048C
    _080003D8:
        movs r2, #0x9C
        lsls r2, r2, #0x01
        adds r1, r6, r2
        subs r2, #0x04
        adds r0, r6, r2
        ldr r0, [r0, #0x00]
        str r0, [r1, #0x00]
        movs r0, #0x02
        str r0, [r3, #0x00]
        movs r0, #0x9E
        lsls r0, r0, #0x01
        adds r1, r6, r0
        movs r0, #0x00
        str r0, [r1, #0x00]
        b _0800048C
    _080003F6:
        movs r0, #0x9E
        lsls r0, r0, #0x01
        adds r1, r6, r0
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        cmp r0, #0x08
        bgt _0800045C
        movs r1, #0x9C
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r4, [r0, #0x00]
        subs r1, #0x10
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        ldr r0, [r2, #0x00]
        cmp r0, #0x00
        bne _0800041E
        lsls r1, r1, #0x04
        b _08000422
    _0800041E:
        movs r0, #0x0D
        muls r1, r0
    _08000422:
        movs r0, #0x9C
        subs r3, r0, r1
        movs r2, #0x9E
        lsls r2, r2, #0x01
        adds r0, r6, r2
        ldr r0, [r0, #0x00]
        ldr r1, _08000458 @ =0x080E645C
        lsls r0, r0, #0x1B
        asrs r0, r0, #0x10
        cmp r0, #0x00
        bge _0800043A
        adds r0, #0x3F
    _0800043A:
        lsls r0, r0, #0x10
        lsrs r0, r0, #0x16
        lsls r0, r0, #0x02
        adds r0, r0, r1
        ldr r1, [r0, #0x00]
        movs r0, #0x9A
        lsls r0, r0, #0x01
        adds r2, r6, r0
        subs r0, r3, r4
        muls r0, r1
        asrs r0, r0, #0x0F
        adds r0, r4, r0
        str r0, [r2, #0x00]
        b _0800048C
        .byte 0x00, 0x00
    _08000458: .4byte 0x080E645C
    _0800045C:
        movs r1, #0x9A
        lsls r1, r1, #0x01
        adds r3, r6, r1
        subs r1, #0x0C
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        ldr r0, [r2, #0x00]
        cmp r0, #0x00
        bne _08000472
        lsls r1, r1, #0x04
        b _08000476
    _08000472:
        movs r0, #0x0D
        muls r1, r0
    _08000476:
        movs r0, #0x9C
        subs r0, r0, r1
        str r0, [r3, #0x00]
        movs r2, #0x98
        lsls r2, r2, #0x01
        adds r0, r6, r2
        movs r1, #0x00
        str r1, [r0, #0x00]
        adds r2, #0x0C
        adds r0, r6, r2
        str r1, [r0, #0x00]
    _0800048C:
        movs r1, #0xA0
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        bne _0800049A
        b _08000652
    _0800049A:
        movs r2, #0x90
        lsls r2, r2, #0x01
        adds r0, r6, r2
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        bne _080004B6
        adds r0, r6, #0x0
        adds r0, #0xC4
        ldrb r7, [r0, #0x00]
        movs r0, #0x74
        adds r0, r0, r6
        mov r10, r0
        movs r1, #0x10
        b _080004C6
    _080004B6:
        movs r2, #0x8C
        lsls r2, r2, #0x01
        adds r0, r6, r2
        ldrb r7, [r0, #0x00]
        movs r0, #0xC8
        adds r0, r0, r6
        mov r10, r0
        movs r1, #0x0D
    _080004C6:
        str r1, [sp, #0x018]
        cmp r7, #0x01
        ble _08000596
        movs r2, #0xE4
        lsls r2, r2, #0x02
        adds r0, r6, r2
        ldr r0, [r0, #0x00]
        movs r1, #0x2F
        ands r0, r1
        cmp r0, #0x1F
        bhi _08000596
        ldr r3, _08000530 @ =0xFFFF0000
        ands r5, r3
        movs r0, #0x78
        orrs r5, r0
        ldr r4, _08000534 @ =0x0000FFFF
        ands r5, r4
        movs r0, #0x84
        lsls r0, r0, #0x10
        orrs r5, r0
        lsls r1, r5, #0x10
        lsrs r1, r1, #0x10
        ldr r0, [sp, #0x00C]
        ands r0, r3
        orrs r0, r1
        ldr r2, [sp, #0x008]
        ands r2, r3
        orrs r2, r1
        asrs r3, r5, #0x10
        subs r1, r3, #0x7
        lsls r1, r1, #0x10
        ands r0, r4
        orrs r0, r1
        str r0, [sp, #0x00C]
        adds r3, #0x0F
        lsls r3, r3, #0x10
        ands r2, r4
        orrs r2, r3
        str r2, [sp, #0x008]
        cmp r7, #0x02
        bne _0800053C
        movs r1, #0x94
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        cmp r1, #0x00
        bne _0800055E
        ldr r0, _08000538 @ =0x080D8BA4
        str r1, [sp, #0x000]
        str r1, [sp, #0x004]
        add r1, sp, #0x008
        movs r2, #0x00
        b _08000568
    _08000530: .4byte 0xFFFF0000
    _08000534: .4byte 0x0000FFFF
    _08000538: .4byte 0x080D8BA4
    _0800053C:
        movs r2, #0x94
        lsls r2, r2, #0x01
        adds r0, r6, r2
        ldr r1, [r0, #0x00]
        cmp r1, #0x00
        bne _08000558
        ldr r0, _08000554 @ =0x080D8BA4
        str r1, [sp, #0x000]
        str r1, [sp, #0x004]
        add r1, sp, #0x008
        movs r2, #0x00
        b _08000568
    _08000554: .4byte 0x080D8BA4
    _08000558:
        subs r0, r7, #0x1
        cmp r1, r0
        bne _08000574
    _0800055E:
        ldr r0, _08000570 @ =0x080D8BAC
        add r1, sp, #0x00C
        movs r2, #0x00
        str r2, [sp, #0x000]
        str r2, [sp, #0x004]
    _08000568:
        movs r3, #0x00
        bl oam_renderCellData
        b _08000596
    _08000570: .4byte 0x080D8BAC
    _08000574:
        ldr r0, _080005BC @ =0x080D8BAC
        add r1, sp, #0x00C
        movs r4, #0x00
        str r4, [sp, #0x000]
        str r4, [sp, #0x004]
        movs r2, #0x00
        movs r3, #0x00
        bl oam_renderCellData
        ldr r0, _080005C0 @ =0x080D8BA4
        str r4, [sp, #0x000]
        str r4, [sp, #0x004]
        add r1, sp, #0x008
        movs r2, #0x00
        movs r3, #0x00
        bl oam_renderCellData
    _08000596:
        movs r5, #0x00
        add r0, sp, #0x014
        mov r9, r0
        cmp r5, r7
        bge _08000612
        mov r8, r5
        mov r4, r10
    _080005A4:
        ldrb r2, [r4, #0x00]
        movs r1, #0x94
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r0, [r0, #0x00]
        cmp r5, r0
        blt _080005B6
        cmp r5, r0
        ble _080005C8
    _080005B6:
        ldr r1, _080005C4 @ =0x080D8E4C
        b _080005DA
        .byte 0x00, 0x00
    _080005BC: .4byte 0x080D8BAC
    _080005C0: .4byte 0x080D8BA4
    _080005C4: .4byte 0x080D8E4C
    _080005C8:
        ldr r0, [r4, #0x04]
        cmp r0, #0x00
        bne _080005D8
        ldr r1, _080005D4 @ =0x080D8E34
        b _080005DA
        .byte 0x00, 0x00
    _080005D4: .4byte 0x080D8E34
    _080005D8:
        ldr r1, _08000634 @ =0x080D8E1C
    _080005DA:
        lsls r0, r2, #0x02
        adds r0, r0, r1
        ldr r2, [r0, #0x00]
        movs r1, #0x9A
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r0, [r0, #0x00]
        add r0, r8
        subs r0, #0x18
        lsls r0, r0, #0x10
        movs r1, #0x78
        orrs r1, r0
        str r1, [sp, #0x010]
        movs r0, #0x00
        str r0, [sp, #0x000]
        str r0, [sp, #0x004]
        adds r0, r2, #0x0
        add r1, sp, #0x010
        movs r2, #0x00
        movs r3, #0x00
        bl oam_renderCellData
        ldr r2, [sp, #0x018]
        add r8, r2
        adds r4, #0x08
        adds r5, #0x01
        cmp r5, r7
        blt _080005A4
    _08000612:
        ldr r0, _08000638 @ =0x00840078
        str r0, [sp, #0x014]
        movs r1, #0x90
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        cmp r1, #0x00
        bne _08000640
        ldr r0, _0800063C @ =0x080D8B14
        str r1, [sp, #0x000]
        str r1, [sp, #0x004]
        mov r1, r9
        movs r2, #0x00
        movs r3, #0x00
        bl oam_renderCellData
        b _08000652
    _08000634: .4byte 0x080D8E1C
    _08000638: .4byte 0x00840078
    _0800063C: .4byte 0x080D8B14
    _08000640:
        ldr r0, _08000680 @ =0x080D8C44
        movs r1, #0x00
        str r1, [sp, #0x000]
        str r1, [sp, #0x004]
        mov r1, r9
        movs r2, #0x00
        movs r3, #0x00
        bl oam_renderCellData
    _08000652:
        movs r2, #0xE4
        lsls r2, r2, #0x02
        adds r0, r6, r2
        ldr r0, [r0, #0x00]
        lsrs r0, r0, #0x02
        movs r7, #0x03
        bics r7, r0
        movs r5, #0x00
        ldr r0, _08000684 @ =0x080CAE70
        mov r8, r0
        subs r4, r7, #0x4
    _08000668:
        movs r0, #0x01
        bl pltt_getBuffer
        movs r1, #0xAF
        subs r1, r1, r5
        lsls r1, r1, #0x01
        adds r1, r1, r0
        adds r0, r5, r7
        cmp r0, #0x03
        bgt _08000688
        lsls r0, r0, #0x01
        b _0800068A
    _08000680: .4byte 0x080D8C44
    _08000684: .4byte 0x080CAE70
    _08000688:
        lsls r0, r4, #0x01
    _0800068A:
        add r0, r8
        ldrh r0, [r0, #0x00]
        strh r0, [r1, #0x00]
        adds r4, #0x01
        adds r5, #0x01
        cmp r5, #0x03
        ble _08000668
        movs r0, #0x01
        bl pltt_setDirtyFlag
        movs r2, #0xE2
        lsls r2, r2, #0x02
        adds r1, r6, r2
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        cmp r0, #0x05
        ble _080006EC
        movs r2, #0x00
        str r2, [r1, #0x00]
        movs r0, #0xE3
        lsls r0, r0, #0x02
        adds r4, r6, r0
        ldr r0, [r4, #0x00]
        adds r0, #0x01
        str r0, [r4, #0x00]
        cmp r0, #0x0F
        ble _080006C4
        str r2, [r4, #0x00]
    _080006C4:
        ldr r4, [r4, #0x00]
        lsls r4, r4, #0x05
        movs r1, #0xCC
        lsls r1, r1, #0x01
        adds r4, r4, r1
        adds r4, r6, r4
        movs r0, #0x01
        bl pltt_getBuffer
        adds r1, r0, #0x0
        movs r2, #0x98
        lsls r2, r2, #0x01
        adds r1, r1, r2
        adds r0, r4, #0x0
        movs r2, #0x08
        bl CpuSet
        movs r0, #0x01
        bl pltt_setDirtyFlag
    _080006EC:
        add sp, #0x01C
        pop {r3, r4, r5}
        mov r8, r3
        mov r9, r4
        mov r10, r5
        pop {r4, r5, r6, r7}
        pop {r0}
        bx r0
        thumb_func_start sub_80006FC
    sub_80006FC:
        push {r4, r5, r6, lr}
        add sp, #-0x008
        adds r5, r0, #0x0
        movs r0, #0xAA
        lsls r0, r0, #0x01
        adds r1, r5, r0
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        cmp r0, #0x08
        ble _08000728
        movs r2, #0x00
        str r2, [r1, #0x00]
        movs r3, #0xA8
        lsls r3, r3, #0x01
        adds r1, r5, r3
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        cmp r0, #0x07
        ble _08000728
        str r2, [r1, #0x00]
    _08000728:
        movs r4, #0xA8
        lsls r4, r4, #0x01
        adds r0, r5, r4
        ldr r4, [r0, #0x00]
        lsls r4, r4, #0x05
        ldr r0, _08000764 @ =0x080D5CD4
        adds r4, r4, r0
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0xF4
        adds r0, r4, #0x0
        movs r2, #0x04
        bl CpuSet
        movs r0, #0x01
        bl pltt_setDirtyFlag
        movs r0, #0xAC
        lsls r0, r0, #0x01
        adds r6, r5, r0
        ldr r0, [r6, #0x00]
        cmp r0, #0x01
        beq _08000798
        cmp r0, #0x01
        bgt _08000768
        cmp r0, #0x00
        beq _0800076E
        b _08000868
    _08000764: .4byte 0x080D5CD4
    _08000768:
        cmp r0, #0x02
        beq _080007D4
        b _08000868
    _0800076E:
        movs r1, #0xA6
        lsls r1, r1, #0x01
        adds r0, r5, r1
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000868
        movs r2, #0xB4
        lsls r2, r2, #0x01
        adds r1, r5, r2
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        movs r3, #0xB6
        lsls r3, r3, #0x01
        adds r1, r5, r3
        ldr r1, [r1, #0x00]
        cmp r0, r1
        ble _08000868
        movs r0, #0x01
        str r0, [r6, #0x00]
        b _08000868
    _08000798:
        movs r4, #0xB4
        lsls r4, r4, #0x01
        adds r0, r5, r4
        movs r2, #0x00
        str r2, [r0, #0x00]
        movs r0, #0xAE
        lsls r0, r0, #0x01
        adds r1, r5, r0
        movs r0, #0x3C
        strh r0, [r1, #0x00]
        movs r3, #0xAF
        lsls r3, r3, #0x01
        adds r1, r5, r3
        ldr r0, _080007D0 @ =0x0000FFF6
        strh r0, [r1, #0x00]
        subs r4, #0x08
        adds r1, r5, r4
        movs r0, #0xC0
        lsls r0, r0, #0x01
        str r0, [r1, #0x00]
        movs r1, #0xB2
        lsls r1, r1, #0x01
        adds r0, r5, r1
        str r2, [r0, #0x00]
        movs r0, #0x02
        str r0, [r6, #0x00]
        b _08000868
        .byte 0x00, 0x00
    _080007D0: .4byte 0x0000FFF6
    _080007D4:
        movs r3, #0xB4
        lsls r3, r3, #0x01
        adds r2, r5, r3
        ldr r0, [r2, #0x00]
        adds r1, r0, #0x1
        str r1, [r2, #0x00]
        cmp r1, #0x20
        bgt _08000850
        movs r0, #0x20
        subs r0, r0, r1
        adds r2, r0, #0x0
        muls r2, r0
        lsls r0, r2, #0x01
        adds r0, r0, r2
        lsls r0, r0, #0x03
        adds r0, r0, r2
        lsls r0, r0, #0x01
        negs r0, r0
        cmp r0, #0x00
        bge _08000800
        ldr r4, _08000848 @ =0x000003FF
        adds r0, r0, r4
    _08000800:
        asrs r1, r0, #0x0A
        movs r0, #0x0A
        subs r0, r0, r1
        movs r3, #0xAE
        lsls r3, r3, #0x01
        adds r1, r5, r3
        strh r0, [r1, #0x00]
        lsls r0, r2, #0x04
        subs r0, r0, r2
        lsls r0, r0, #0x02
        cmp r0, #0x00
        bge _0800081C
        ldr r4, _08000848 @ =0x000003FF
        adds r0, r0, r4
    _0800081C:
        asrs r1, r0, #0x0A
        movs r0, #0x32
        subs r0, r0, r1
        movs r1, #0xAF
        lsls r1, r1, #0x01
        adds r2, r5, r1
        strh r0, [r2, #0x00]
        movs r2, #0xB0
        lsls r2, r2, #0x01
        adds r1, r5, r2
        ldr r0, [r1, #0x00]
        subs r0, #0x01
        str r0, [r1, #0x00]
        movs r3, #0xB2
        lsls r3, r3, #0x01
        adds r1, r5, r3
        ldr r0, [r1, #0x00]
        ldr r4, _0800084C @ =0xFFFFF000
        adds r0, r0, r4
        str r0, [r1, #0x00]
        b _08000868
        .byte 0x00, 0x00
    _08000848: .4byte 0x000003FF
    _0800084C: .4byte 0xFFFFF000
    _08000850:
        movs r4, #0x00
        str r4, [r2, #0x00]
        bl sub_802D5D0
        movs r1, #0xB6
        lsls r1, r1, #0x01
        adds r2, r5, r1
        movs r1, #0xFF
        ands r1, r0
        adds r1, #0xFF
        str r1, [r2, #0x00]
        str r4, [r6, #0x00]
    _08000868:
        movs r2, #0xAC
        lsls r2, r2, #0x01
        adds r0, r5, r2
        ldr r0, [r0, #0x00]
        cmp r0, #0x01
        ble _08000896
        ldr r0, _080008A0 @ =0x080D8B9C
        movs r3, #0xAE
        lsls r3, r3, #0x01
        adds r1, r5, r3
        movs r4, #0xB0
        lsls r4, r4, #0x01
        adds r2, r5, r4
        ldr r3, [r2, #0x00]
        adds r4, #0x04
        adds r2, r5, r4
        ldr r2, [r2, #0x00]
        str r2, [sp, #0x000]
        movs r2, #0x00
        str r2, [sp, #0x004]
        adds r2, r3, #0x0
        bl oam_renderCellData
    _08000896:
        add sp, #0x008
        pop {r4, r5, r6}
        pop {r0}
        bx r0
        .byte 0x00, 0x00
    _080008A0: .4byte 0x080D8B9C
        thumb_func_start sub_80008A4
    sub_80008A4:
        push {r4, lr}
        add sp, #-0x008
        adds r3, r0, #0x0
        movs r1, #0xA6
        lsls r1, r1, #0x01
        adds r0, r3, r1
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000984
        movs r2, #0xB8
        lsls r2, r2, #0x01
        adds r4, r3, r2
        ldr r2, [r4, #0x00]
        cmp r2, #0x01
        beq _080008F0
        cmp r2, #0x01
        bgt _080008CC
        cmp r2, #0x00
        beq _080008D2
        b _08000954
    _080008CC:
        cmp r2, #0x02
        beq _08000910
        b _08000954
    _080008D2:
        movs r0, #0xBC
        lsls r0, r0, #0x01
        adds r1, r3, r0
        ldr r0, _080008EC @ =0xFFE00000
        str r0, [r1, #0x00]
        movs r1, #0xBA
        lsls r1, r1, #0x01
        adds r0, r3, r1
        str r2, [r0, #0x00]
        movs r0, #0x01
        str r0, [r4, #0x00]
        b _08000954
        .byte 0x00, 0x00
    _080008EC: .4byte 0xFFE00000
    _080008F0:
        movs r0, #0xBA
        lsls r0, r0, #0x01
        adds r2, r3, r0
        ldr r0, [r2, #0x00]
        adds r0, #0x01
        str r0, [r2, #0x00]
        ldr r1, _0800090C @ =0x00000257
        cmp r0, r1
        ble _08000954
        movs r0, #0x00
        str r0, [r2, #0x00]
        movs r0, #0x02
        str r0, [r4, #0x00]
        b _08000954
    _0800090C: .4byte 0x00000257
    _08000910:
        movs r2, #0xBA
        lsls r2, r2, #0x01
        adds r1, r3, r2
        ldr r0, [r1, #0x00]
        adds r0, #0x01
        str r0, [r1, #0x00]
        movs r4, #0xBC
        lsls r4, r4, #0x01
        adds r2, r3, r4
        ldr r0, [r2, #0x00]
        movs r4, #0x80
        lsls r4, r4, #0x06
        adds r0, r0, r4
        str r0, [r2, #0x00]
        ldrb r0, [r1, #0x00]
        ldr r1, _0800098C @ =0x080E645C
        lsls r0, r0, #0x18
        asrs r0, r0, #0x10
        cmp r0, #0x00
        bge _0800093A
        adds r0, #0x3F
    _0800093A:
        lsls r0, r0, #0x10
        lsrs r0, r0, #0x16
        lsls r0, r0, #0x02
        adds r0, r0, r1
        ldr r0, [r0, #0x00]
        movs r2, #0xBE
        lsls r2, r2, #0x01
        adds r1, r3, r2
        lsls r0, r0, #0x03
        movs r4, #0x80
        lsls r4, r4, #0x0E
        adds r0, r0, r4
        str r0, [r1, #0x00]
    _08000954:
        movs r1, #0xBC
        lsls r1, r1, #0x01
        adds r0, r3, r1
        movs r2, #0x02
        ldsh r0, [r0, r2]
        movs r4, #0xC0
        lsls r4, r4, #0x01
        adds r1, r3, r4
        movs r2, #0x00
        strh r0, [r1, #0x00]
        subs r4, #0x04
        adds r0, r3, r4
        movs r4, #0x02
        ldsh r0, [r0, r4]
        movs r4, #0xC1
        lsls r4, r4, #0x01
        adds r3, r3, r4
        strh r0, [r3, #0x00]
        ldr r0, _08000990 @ =0x080D8DDC
        str r2, [sp, #0x000]
        str r2, [sp, #0x004]
        movs r3, #0x00
        bl oam_renderCellData
    _08000984:
        add sp, #0x008
        pop {r4}
        pop {r0}
        bx r0
    _0800098C: .4byte 0x080E645C
    _08000990: .4byte 0x080D8DDC
        thumb_func_start title_vblank
    title_vblank: @ 08000994
        ldr r0, _08000A24 @ =0x03000000
        ldr r2, [r0, #0x00]
        ldr r1, _08000A28 @ =0x04000010
        ldrh r0, [r2, #0x00]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x02]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x04]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x06]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x08]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x0A]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x0C]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x0E]
        strh r0, [r1, #0x00]
        adds r1, #0x32
        ldrh r0, [r2, #0x10]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x12]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x14]
        strh r0, [r1, #0x00]
        subs r1, #0x14
        ldrh r0, [r2, #0x16]
        strh r0, [r1, #0x00]
        adds r1, #0x04
        ldrh r0, [r2, #0x18]
        strh r0, [r1, #0x00]
        subs r1, #0x02
        ldrh r0, [r2, #0x1A]
        strh r0, [r1, #0x00]
        adds r1, #0x04
        ldrh r0, [r2, #0x1C]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x1E]
        strh r0, [r1, #0x00]
        ldr r3, _08000A2C @ =0x0400004A
        ldrh r0, [r2, #0x20]
        movs r1, #0x10
        orrs r0, r1
        strh r0, [r3, #0x00]
        ldr r1, _08000A30 @ =0x04000008
        ldrh r0, [r2, #0x22]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x24]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x26]
        strh r0, [r1, #0x00]
        adds r1, #0x02
        ldrh r0, [r2, #0x28]
        strh r0, [r1, #0x00]
        subs r1, #0x0E
        ldrh r0, [r2, #0x2A]
        strh r0, [r1, #0x00]
        bx lr
        .byte 0x00, 0x00
    _08000A24: .4byte 0x03000000
    _08000A28: .4byte 0x04000010
    _08000A2C: .4byte 0x0400004A
    _08000A30: .4byte 0x04000008
        thumb_func_start title_loadGraphics
    title_loadGraphics: @ 08000A34
        push {r4, r5, r6, r7, lr}
        mov r7, r8
        push {r7}
        ldr r0, _08000A58 @ =0x03000000
        ldr r7, [r0, #0x00]
        ldr r1, _08000A5C @ =0x06001000
        movs r0, #0x00
        bl map_setBufferDestination
        movs r1, #0xA4
        lsls r1, r1, #0x01
        adds r0, r7, r1
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000A64
        ldr r4, _08000A60 @ =0x080CDC0C
        b _08000A72
        .byte 0x00, 0x00
    _08000A58: .4byte 0x03000000
    _08000A5C: .4byte 0x06001000
    _08000A60: .4byte 0x080CDC0C
    _08000A64:
        movs r2, #0xC2
        lsls r2, r2, #0x01
        adds r0, r7, r2
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000A88
        ldr r4, _08000A84 @ =0x080CDB78
    _08000A72:
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r0, r4, #0x0
        bl LZ77UnCompWram
        b _08000A98
        .byte 0x00, 0x00
    _08000A84: .4byte 0x080CDB78
    _08000A88:
        ldr r4, _08000AE0 @ =0x080CDAE4
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r0, r4, #0x0
        bl LZ77UnCompWram
    _08000A98:
        bl main_frameProc
        movs r1, #0xC2
        lsls r1, r1, #0x01
        adds r0, r7, r1
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000AF0
        ldr r4, _08000AE4 @ =0x080CD9A0
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0x80
        adds r0, r4, #0x0
        bl LZ77UnCompWram
        ldr r4, _08000AE8 @ =0x080CDA9C
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0x80
        adds r0, r4, #0x0
        bl LZ77UnCompWram
        ldr r4, _08000AEC @ =0x080CDAC4
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0xE0
        adds r0, r4, #0x0
        bl LZ77UnCompWram
        b _08000B02
    _08000AE0: .4byte 0x080CDAE4
    _08000AE4: .4byte 0x080CD9A0
    _08000AE8: .4byte 0x080CDA9C
    _08000AEC: .4byte 0x080CDAC4
    _08000AF0:
        ldr r4, _08000D9C @ =0x080CD9A0
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0x80
        adds r0, r4, #0x0
        bl LZ77UnCompWram
    _08000B02:
        movs r0, #0x01
        bl pltt_setDirtyFlag
        bl main_frameProc
        ldr r0, _08000DA0 @ =0x080CDCA0
        ldr r4, _08000DA4 @ =0x02025400
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DA8 @ =0x06004000
        ldr r3, _08000DAC @ =0x80001400
        adds r1, r4, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000DB0 @ =0x080CEBB4
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DB4 @ =0x06008000
        ldr r5, _08000DB8 @ =0x80001300
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000DBC @ =0x080D0060
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DC0 @ =0x0600A600
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r5, _08000DC4 @ =0x080D4794
        movs r0, #0x00
        movs r1, #0x00
        movs r2, #0x00
        bl map_getBufferPtr2d
        adds r1, r0, #0x0
        adds r0, r5, #0x0
        bl LZ77UnCompWram
        movs r0, #0x01
        bl map_setBufferDirty
        bl main_frameProc
        ldr r0, _08000DC8 @ =0x080D455C
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DCC @ =0x06002000
        ldr r6, _08000DD0 @ =0x80000400
        adds r1, r4, #0x0
        adds r3, r6, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000DD4 @ =0x080D49FC
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DD8 @ =0x06002800
        ldr r3, _08000DDC @ =0x80000800
        adds r1, r4, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000DE0 @ =0x080D4E10
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DE4 @ =0x06003800
        mov r8, r2
        adds r1, r4, #0x0
        adds r3, r6, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r5, _08000DE8 @ =0x080CAC64
        movs r0, #0x01
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r0, r5, #0x0
        bl LZ77UnCompWram
        movs r0, #0x01
        bl pltt_setDirtyFlag
        bl main_frameProc
        ldr r0, _08000DEC @ =0x080CADC4
        movs r2, #0xC4
        lsls r2, r2, #0x01
        adds r1, r7, r2
        bl LZ77UnCompWram
        bl main_frameProc
        ldr r0, _08000DF0 @ =0x080CAE78
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000DF4 @ =0x06011400
        ldr r5, _08000DF8 @ =0x80000A80
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000DFC @ =0x080CB62C
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E00 @ =0x06012900
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E04 @ =0x080CBA10
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E08 @ =0x06013E00
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E0C @ =0x080CC1F0
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E10 @ =0x06015300
        adds r1, r4, #0x0
        adds r3, r5, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E14 @ =0x080CC748
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E18 @ =0x06016800
        ldr r3, _08000E1C @ =0x80000200
        adds r1, r4, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E20 @ =0x080CCCEC
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E24 @ =0x06016C00
        adds r1, r4, #0x0
        adds r3, r6, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E28 @ =0x080CC8F4
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r2, _08000E2C @ =0x06017400
        ldr r3, _08000E30 @ =0x80000260
        adds r1, r4, #0x0
        bl dmaq_enqueue
        bl main_frameProc
        ldr r0, _08000E34 @ =0x080D0DE0
        ldr r4, _08000E38 @ =0x02010400
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl main_frameProc
        ldr r0, _08000E3C @ =0x080D1D20
        movs r2, #0xB0
        lsls r2, r2, #0x05
        adds r1, r4, r2
        bl LZ77UnCompWram
        bl main_frameProc
        ldr r0, _08000E40 @ =0x080D2BA8
        movs r2, #0xB0
        lsls r2, r2, #0x06
        adds r1, r4, r2
        bl LZ77UnCompWram
        bl main_frameProc
        ldr r0, _08000E44 @ =0x080D3A90
        movs r1, #0x84
        lsls r1, r1, #0x07
        adds r4, r4, r1
        adds r1, r4, #0x0
        bl LZ77UnCompWram
        bl main_frameProc
        ldr r0, _08000E48 @ =0x080D58F8
        ldr r1, _08000E4C @ =0x02004400
        bl LZ77UnCompWram
        bl main_frameProc
        movs r2, #0xA4
        lsls r2, r2, #0x01
        adds r0, r7, r2
        ldr r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000D3E
        ldr r0, _08000E50 @ =0x080D53D8
        mov r1, r8
        bl LZ77UnCompVram
        ldr r4, _08000E54 @ =0x080D5CA0
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0x80
        adds r0, r4, #0x0
        movs r2, #0x08
        bl CpuFastSet
        ldr r4, _08000E58 @ =0x080D5CC0
        movs r0, #0x00
        bl pltt_getBuffer
        adds r1, r0, #0x0
        adds r1, #0xE0
        adds r0, r4, #0x0
        movs r2, #0x08
        bl CpuFastSet
        movs r0, #0x01
        bl pltt_setDirtyFlag
    _08000D3E:
        bl main_frameProc
        ldrh r0, [r7, #0x22]
        movs r1, #0x00
        ldr r0, _08000E5C @ =0x00004204
        strh r0, [r7, #0x22]
        ldrh r0, [r7, #0x24]
        ldr r0, _08000E60 @ =0x00000405
        strh r0, [r7, #0x24]
        ldrh r0, [r7, #0x26]
        ldr r0, _08000E64 @ =0x0000850A
        strh r0, [r7, #0x26]
        ldrh r0, [r7, #0x28]
        ldr r0, _08000E68 @ =0x0000070B
        strh r0, [r7, #0x28]
        ldrh r0, [r7, #0x10]
        movs r0, #0xBF
        strh r0, [r7, #0x10]
        ldrh r0, [r7, #0x14]
        movs r0, #0x10
        strh r0, [r7, #0x14]
        ldrh r0, [r7, #0x2A]
        movs r0, #0xE2
        lsls r0, r0, #0x05
        strh r0, [r7, #0x2A]
        ldrh r0, [r7, #0x00]
        strh r1, [r7, #0x00]
        ldrh r0, [r7, #0x02]
        strh r1, [r7, #0x02]
        ldrh r0, [r7, #0x04]
        strh r1, [r7, #0x04]
        ldrh r0, [r7, #0x06]
        movs r0, #0x20
        strh r0, [r7, #0x06]
        ldrh r0, [r7, #0x08]
        strh r1, [r7, #0x08]
        ldrh r0, [r7, #0x0A]
        strh r1, [r7, #0x0A]
        ldrh r0, [r7, #0x0C]
        strh r1, [r7, #0x0C]
        ldrh r0, [r7, #0x0E]
        strh r1, [r7, #0x0E]
        pop {r3}
        mov r8, r3
        pop {r4, r5, r6, r7}
        pop {r0}
        bx r0
    _08000D9C: .4byte 0x080CD9A0
    _08000DA0: .4byte 0x080CDCA0
    _08000DA4: .4byte 0x02025400
    _08000DA8: .4byte 0x06004000
    _08000DAC: .4byte 0x80001400
    _08000DB0: .4byte 0x080CEBB4
    _08000DB4: .4byte 0x06008000
    _08000DB8: .4byte 0x80001300
    _08000DBC: .4byte 0x080D0060
    _08000DC0: .4byte 0x0600A600
    _08000DC4: .4byte 0x080D4794
    _08000DC8: .4byte 0x080D455C
    _08000DCC: .4byte 0x06002000
    _08000DD0: .4byte 0x80000400
    _08000DD4: .4byte 0x080D49FC
    _08000DD8: .4byte 0x06002800
    _08000DDC: .4byte 0x80000800
    _08000DE0: .4byte 0x080D4E10
    _08000DE4: .4byte 0x06003800
    _08000DE8: .4byte 0x080CAC64
    _08000DEC: .4byte 0x080CADC4
    _08000DF0: .4byte 0x080CAE78
    _08000DF4: .4byte 0x06011400
    _08000DF8: .4byte 0x80000A80
    _08000DFC: .4byte 0x080CB62C
    _08000E00: .4byte 0x06012900
    _08000E04: .4byte 0x080CBA10
    _08000E08: .4byte 0x06013E00
    _08000E0C: .4byte 0x080CC1F0
    _08000E10: .4byte 0x06015300
    _08000E14: .4byte 0x080CC748
    _08000E18: .4byte 0x06016800
    _08000E1C: .4byte 0x80000200
    _08000E20: .4byte 0x080CCCEC
    _08000E24: .4byte 0x06016C00
    _08000E28: .4byte 0x080CC8F4
    _08000E2C: .4byte 0x06017400
    _08000E30: .4byte 0x80000260
    _08000E34: .4byte 0x080D0DE0
    _08000E38: .4byte 0x02010400
    _08000E3C: .4byte 0x080D1D20
    _08000E40: .4byte 0x080D2BA8
    _08000E44: .4byte 0x080D3A90
    _08000E48: .4byte 0x080D58F8
    _08000E4C: .4byte 0x02004400
    _08000E50: .4byte 0x080D53D8
    _08000E54: .4byte 0x080D5CA0
    _08000E58: .4byte 0x080D5CC0
    _08000E5C: .4byte 0x00004204
    _08000E60: .4byte 0x00000405
    _08000E64: .4byte 0x0000850A
    _08000E68: .4byte 0x0000070B
        thumb_func_start title_main
    title_main: @ 08000E6C
        push {r4, r5, r6, r7, lr}
        mov r7, r10
        mov r6, r9
        mov r5, r8
        push {r5, r6, r7}
        add sp, #-0x01C
        movs r0, #0x01
        mov r10, r0
        movs r1, #0x00
        mov r9, r1
        movs r2, #0x00
        str r2, [sp, #0x000]
        movs r3, #0x00
        str r3, [sp, #0x004]
        movs r0, #0x00
        str r0, [sp, #0x008]
        str r1, [sp, #0x00C]
        ldr r0, _08001088 @ =0x03002C80
        strh r2, [r0, #0x16]
        bl sub_802DC44
        ldr r4, _0800108C @ =0x03002E20
        ldr r3, _08001090 @ =0x00000704
        adds r4, r4, r3
        ldr r1, _08001094 @ =0x0202A400
        movs r2, #0x80
        lsls r2, r2, #0x08
        adds r0, r4, #0x0
        bl frmheap_init
        ldr r5, _08001098 @ =0x03000000
        movs r2, #0xE5
        lsls r2, r2, #0x02
        adds r0, r4, #0x0
        movs r1, #0x01
        bl frmheap_calloc
        str r0, [r5, #0x00]
        adds r6, r0, #0x0
        movs r2, #0xA0
        lsls r2, r2, #0x05
        adds r0, r4, #0x0
        movs r1, #0x01
        bl frmheap_calloc
        str r0, [r6, #0x34]
        movs r1, #0xC2
        lsls r1, r1, #0x01
        adds r0, r6, r1
        mov r2, r10
        str r2, [r0, #0x00]
        adds r3, r6, #0x0
        adds r3, #0xC4
        str r3, [sp, #0x018]
        movs r0, #0x90
        lsls r0, r0, #0x01
        adds r0, r6, r0
        str r0, [sp, #0x010]
        movs r1, #0x04
        str r1, [sp, #0x014]
        movs r2, #0xC2
        lsls r2, r2, #0x01
        adds r2, r2, r6
        mov r8, r2
        movs r7, #0x00
        movs r5, #0x04
    _08000EF0:
        movs r4, #0x00
    _08000EF2:
        bl sub_805D9B0
        adds r1, r4, r7
        adds r0, #0x28
        adds r0, r0, r1
        ldrb r0, [r0, #0x00]
        lsls r0, r0, #0x18
        asrs r0, r0, #0x18
        cmp r0, #0x00
        beq _08000F0C
        movs r0, #0x00
        mov r3, r8
        str r0, [r3, #0x00]
    _08000F0C:
        adds r4, #0x01
        cmp r4, #0x02
        ble _08000EF2
        adds r7, #0x03
        subs r5, #0x01
        cmp r5, #0x00
        bge _08000EF0
        movs r0, #0xA4
        lsls r0, r0, #0x01
        adds r1, r6, r0
        movs r0, #0x01
        str r0, [r1, #0x00]
        movs r5, #0x00
        movs r1, #0xA4
        lsls r1, r1, #0x01
        adds r1, r1, r6
        mov r8, r1
        movs r7, #0x00
    _08000F30:
        movs r4, #0x00
    _08000F32:
        bl sub_805D9B0
        adds r1, r4, r7
        adds r0, #0x46
        adds r0, r0, r1
        ldrb r0, [r0, #0x00]
        cmp r0, #0x00
        beq _08000F48
        movs r0, #0x00
        mov r2, r8
        str r0, [r2, #0x00]
    _08000F48:
        adds r4, #0x01
        cmp r4, #0x02
        ble _08000F32
        adds r7, #0x03
        adds r5, #0x01
        cmp r5, #0x04
        ble _08000F30
        movs r0, #0x00
        str r0, [r6, #0x2C]
        str r0, [r6, #0x30]
        ldr r2, [sp, #0x018]
        movs r0, #0x03
        strb r0, [r2, #0x00]
        movs r5, #0x00
        ldr r4, _0800109C @ =0x080D8E64
        movs r3, #0x00
        adds r1, r6, #0x0
        adds r1, #0x74
    _08000F6C:
        adds r0, r5, r4
        ldrb r0, [r0, #0x00]
        strb r0, [r1, #0x00]
        str r3, [r1, #0x04]
        adds r1, #0x08
        adds r5, #0x01
        ldrb r0, [r2, #0x00]
        cmp r5, r0
        blt _08000F6C
        movs r1, #0x8E
        lsls r1, r1, #0x01
        adds r0, r6, r1
        movs r1, #0x00
        str r1, [r0, #0x00]
        movs r2, #0x90
        lsls r2, r2, #0x01
        adds r0, r6, r2
        str r1, [r0, #0x00]
        movs r3, #0x92
        lsls r3, r3, #0x01
        adds r0, r6, r3
        str r1, [r0, #0x00]
        adds r2, #0x08
        adds r0, r6, r2
        str r1, [r0, #0x00]
        adds r3, #0x08
        adds r0, r6, r3
        str r1, [r0, #0x00]
        adds r2, #0x08
        adds r0, r6, r2
        str r1, [r0, #0x00]
        adds r3, #0x08
        adds r0, r6, r3
        movs r2, #0x9C
        str r2, [r0, #0x00]
        adds r3, #0x04
        adds r0, r6, r3
        str r2, [r0, #0x00]
        adds r2, #0xA0
        adds r0, r6, r2
        str r1, [r0, #0x00]
        adds r3, #0x08
        adds r0, r6, r3
        str r1, [r0, #0x00]
        movs r2, #0xE2
        lsls r2, r2, #0x02
        adds r0, r6, r2
        str r1, [r0, #0x00]
        movs r3, #0xE3
        lsls r3, r3, #0x02
        adds r0, r6, r3
        str r1, [r0, #0x00]
        movs r2, #0xA6
        lsls r2, r2, #0x01
        adds r0, r6, r2
        str r1, [r0, #0x00]
        movs r3, #0xB0
        lsls r3, r3, #0x01
        adds r0, r6, r3
        str r1, [r0, #0x00]
        adds r2, #0x18
        adds r0, r6, r2
        str r1, [r0, #0x00]
        adds r3, #0x08
        adds r0, r6, r3
        str r1, [r0, #0x00]
        adds r2, #0x08
        adds r0, r6, r2
        str r1, [r0, #0x00]
        adds r3, #0x08
        adds r0, r6, r3
        str r1, [r0, #0x00]
        movs r1, #0x02
        adds r0, r6, #0x0
    _08001000:
        str r1, [r0, #0x44]
        subs r0, #0x14
        cmp r0, r6
        bge _08001000
        movs r1, #0x05
        adds r0, r6, #0x0
        adds r0, #0x14
        movs r5, #0x01
    _08001010:
        str r1, [r0, #0x44]
        adds r0, #0x14
        subs r5, #0x01
        cmp r5, #0x00
        bge _08001010
        bl m4aMPlayAllStop
        bl oam_init
        ldrh r0, [r6, #0x2A]
        movs r0, #0x00
        strh r0, [r6, #0x2A]
        ldrh r0, [r6, #0x10]
        movs r0, #0xBF
        strh r0, [r6, #0x10]
        ldrh r0, [r6, #0x14]
        movs r0, #0x10
        strh r0, [r6, #0x14]
        ldr r5, _080010A0 @ =0x08000995
        ldr r4, _0800108C @ =0x03002E20
        movs r0, #0x01
        movs r1, #0x02
        negs r1, r1
        bl irq_updateMask
        str r5, [r4, #0x0C]
        movs r0, #0x02
        ldr r1, _080010A4 @ =0x00010001
        bl irq_updateMask
        bl title_loadGraphics
        ldr r1, _080010A8 @ =0x080018F9
        movs r0, #0x46
        bl vcount_register
        movs r0, #0x02
        movs r1, #0x04
        bl irq_updateMask
    _08001060:
        bl oam_802FD3C
        bl main_frameProc
        movs r1, #0xE4
        lsls r1, r1, #0x02
        adds r0, r6, r1
        ldr r1, [r0, #0x00]
        adds r1, #0x01
        str r1, [r0, #0x00]
        ldr r2, [sp, #0x010]
        ldr r0, [r2, #0x00]
        cmp r0, #0x00
        bne _080010AC
        ldr r3, [sp, #0x018]
        ldrb r5, [r3, #0x00]
        adds r3, r6, #0x0
        adds r3, #0x74
        b _080010B8
        .byte 0x00, 0x00
    _08001088: .4byte 0x03002C80
    _0800108C: .4byte 0x03002E20
    _08001090: .4byte 0x00000704
    _08001094: .4byte 0x0202A400
    _08001098: .4byte 0x03000000
    _0800109C: .4byte 0x080D8E64
    _080010A0: .4byte title_vblank
    _080010A4: .4byte 0x00010001
    _080010A8: .4byte title_vcount70
    _080010AC:
        movs r1, #0x8C
        lsls r1, r1, #0x01
        adds r0, r6, r1
        ldrb r5, [r0, #0x00]
        adds r3, r6, #0x0
        adds r3, #0xC8
    _080010B8:
        movs r4, #0x00
        cmp r4, r5
        bge _080010FC
    _080010BE:
        lsls r1, r4, #0x03
        adds r0, r1, r3
        ldrb r0, [r0, #0x00]
        adds r2, r1, #0x0
        cmp r0, #0x05
        bhi _080010F6
        lsls r0, r0, #0x02
        ldr r1, _080010D4 @ =0x080010D8
        adds r0, r0, r1
        ldr r0, [r0, #0x00]
        mov pc, r0
    _080010D4: .4byte 0x080010D8
        .byte 0xF0, 0x10, 0x00, 0x08, 0xF0, 0x10, 0x00, 0x08, 0xF0, 0x10, 0x00, 0x08, 0xF0, 0x10, 0x00, 0x08
        .byte 0xF0, 0x10, 0x00, 0x08, 0xF0, 0x10, 0x00, 0x08, 0xD1, 0x18, 0x01, 0x20, 0x48, 0x60
    _080010F6:
        adds r4, #0x01
        cmp r4, r5
        blt _080010BE
    _080010FC:
        mov r2, r10
        cmp r2, #0x1D
        bls _08001104
        b _080017C8
    _08001104:
        ldr r0, _08001110 @ =0x08001114
        ldr r3, [sp, #0x014]
        adds r0, r3, r0
        ldr r0, [r0, #0x00]
        mov pc, r0
        .byte 0x00, 0x00
    _08001110: .4byte 0x08001114
        .byte 0xFC, 0x12, 0x00, 0x08, 0x8C, 0x11, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xC8, 0x17, 0x00, 0x08, 0x96, 0x11, 0x00, 0x08, 0x2C, 0x13, 0x00, 0x08, 0x60, 0x13, 0x00, 0x08
        .byte 0x98, 0x14, 0x00, 0x08, 0xD4, 0x14, 0x00, 0x08, 0xF2, 0x15, 0x00, 0x08, 0xC8, 0x17, 0x00, 0x08
        .byte 0xE2, 0x16, 0x00, 0x08, 0x0C, 0x17, 0x00, 0x08, 0x15, 0x20, 0x82, 0x46, 0x00, 0x21, 0x89, 0x46
        .byte 0x18, 0xE3, 0x00, 0x23, 0x4A, 0x46, 0x20, 0x2A, 0x0C, 0xDC, 0x30, 0x8A, 0xBF, 0x20, 0x30, 0x82
        .byte 0x10, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0x10, 0x30, 0xB1, 0x8A
        .byte 0xB0, 0x82, 0x0C, 0xE0, 0x49, 0x46, 0x80, 0x39, 0x80, 0x29, 0x07, 0xD8, 0x88, 0x00, 0x40, 0x18
        .byte 0x40, 0x00, 0x00, 0x28, 0x00, 0xDA, 0x7F, 0x30, 0xC3, 0x11, 0x00, 0xE0, 0x0A, 0x23, 0x48, 0x46
        .byte 0x80, 0x28, 0x0F, 0xDD, 0x72, 0x8D, 0x80, 0x21, 0x89, 0x00, 0x08, 0x1C, 0x71, 0x8D, 0x10, 0x43
        .byte 0x70, 0x85, 0x30, 0x8A, 0x0C, 0x48, 0x30, 0x82, 0x10, 0x20, 0xC0, 0x1A, 0x00, 0x02, 0x18, 0x43
        .byte 0x71, 0x8A, 0x70, 0x82, 0x01, 0x22, 0x91, 0x44, 0xF0, 0x20, 0x40, 0x00, 0x81, 0x45, 0x27, 0xDC
        .byte 0x4B, 0x46, 0x80, 0x2B, 0x0A, 0xDC, 0x58, 0x00, 0x48, 0x44, 0x80, 0x01, 0x00, 0x28, 0x00, 0xDA
        .byte 0x7F, 0x30, 0xC0, 0x11, 0x80, 0x30, 0x10, 0xE0, 0x42, 0x3D, 0x00, 0x00, 0x98, 0x20, 0x40, 0x00
        .byte 0x81, 0x45, 0x0C, 0xDD, 0x09, 0x49, 0x49, 0x44, 0xC8, 0x00, 0x40, 0x18, 0x40, 0x01, 0xB0, 0x21
        .byte 0x60, 0xF0, 0x3C, 0xFE, 0xA0, 0x21, 0x49, 0x00, 0x40, 0x18, 0x71, 0x89, 0x70, 0x81, 0x48, 0x46
        .byte 0x06, 0x21, 0x60, 0xF0, 0x33, 0xFE, 0xF1, 0x89, 0xF0, 0x81, 0x04, 0xE0, 0xD0, 0xFE, 0xFF, 0xFF
        .byte 0x00, 0x22, 0x91, 0x46, 0x92, 0x46, 0x71, 0x89, 0xA0, 0x20, 0x40, 0x00, 0x81, 0x42, 0x32, 0xD9
        .byte 0x02, 0x9B, 0x01, 0x2B, 0x2F, 0xD0, 0x03, 0x98, 0x0F, 0x28, 0x19, 0xDC, 0x44, 0x00, 0x24, 0x18
        .byte 0xA4, 0x00, 0x24, 0x1A, 0xE4, 0x01, 0x07, 0x4D, 0x65, 0x19, 0x07, 0x49, 0x64, 0x18, 0x2F, 0xF0
        .byte 0xD7, 0xF8, 0x06, 0x4B, 0x29, 0x1C, 0x22, 0x1C, 0x2F, 0xF0, 0xAA, 0xF8, 0x03, 0x9A, 0x01, 0x32
        .byte 0x03, 0x92, 0x0E, 0xE0, 0x00, 0x04, 0x01, 0x02, 0x00, 0xA8, 0x00, 0x06, 0xC0, 0x02, 0x00, 0x80
        .byte 0x2F, 0xF0, 0xC6, 0xF8, 0x10, 0x49, 0x11, 0x4A, 0x11, 0x4B, 0x2F, 0xF0, 0x99, 0xF8, 0x01, 0x23
        .byte 0x02, 0x93, 0xF1, 0x8C, 0x0F, 0x48, 0x08, 0x40, 0xF1, 0x8C, 0xF0, 0x84, 0xF2, 0x8C, 0x80, 0x20
        .byte 0xF1, 0x8C, 0x10, 0x43, 0xF0, 0x84, 0x48, 0x46, 0x20, 0x28, 0x00, 0xDC, 0x7A, 0xE2, 0x09, 0x20
        .byte 0x2C, 0xF0, 0x0A, 0xF9, 0x00, 0x28, 0x00, 0xD1, 0x74, 0xE2, 0x02, 0x21, 0x00, 0x91, 0x00, 0x22
        .byte 0x91, 0x46, 0x16, 0x23, 0x9A, 0x46, 0x6D, 0xE2, 0x00, 0x44, 0x00, 0x02, 0x00, 0x28, 0x00, 0x06
        .byte 0x00, 0x04, 0x00, 0x80, 0x7F, 0xFF, 0x00, 0x00, 0x0A, 0x48, 0x00, 0x78, 0x02, 0x28, 0x03, 0xD9
        .byte 0x00, 0x20, 0x81, 0x46, 0x16, 0x21, 0x8A, 0x46, 0x09, 0x20, 0x2C, 0xF0, 0xED, 0xF8, 0x00, 0x28
        .byte 0x00, 0xD1, 0x57, 0xE2, 0x02, 0x22, 0x00, 0x92, 0x00, 0x23, 0x99, 0x46, 0x16, 0x20, 0x82, 0x46
        .byte 0x50, 0xE2, 0x00, 0x00, 0xF0, 0x69, 0x00, 0x03, 0x01, 0x21, 0x89, 0x44, 0x4A, 0x46, 0x0A, 0x2A
        .byte 0x07, 0xDC, 0x30, 0x8A, 0xBF, 0x20, 0x30, 0x82, 0x10, 0x01, 0x0A, 0x21, 0x60, 0xF0, 0xB6, 0xFD
        .byte 0xB3, 0xE0, 0x30, 0x8A, 0xBF, 0x20, 0x30, 0x82, 0xB0, 0x8A, 0x10, 0x20, 0xB0, 0x82, 0x00, 0x23
        .byte 0x99, 0x46, 0x17, 0x20, 0x82, 0x46, 0x00, 0x21, 0x03, 0x91, 0x33, 0xE2, 0x30, 0x88, 0x00, 0x21
        .byte 0x31, 0x80, 0x70, 0x88, 0x71, 0x80, 0xB0, 0x88, 0xB1, 0x80, 0xF0, 0x88, 0x20, 0x20, 0xF0, 0x80
        .byte 0x30, 0x89, 0x31, 0x81, 0x70, 0x89, 0x98, 0x20, 0x80, 0x00, 0x70, 0x81, 0xB0, 0x89, 0xB1, 0x81
        .byte 0xF0, 0x89, 0x50, 0x20, 0xF0, 0x81, 0x30, 0x1C, 0x28, 0x30, 0x41, 0x64, 0x14, 0x38, 0xB0, 0x42
        .byte 0xFB, 0xDA, 0x72, 0x8D, 0x80, 0x23, 0x5B, 0x00, 0x18, 0x1C, 0x71, 0x8D, 0x00, 0x23, 0x10, 0x43
        .byte 0x70, 0x85, 0x71, 0x8D, 0x80, 0x22, 0x92, 0x00, 0x10, 0x1C, 0x01, 0x43, 0x70, 0x8D, 0x19, 0x43
        .byte 0x71, 0x85, 0xF0, 0x8A, 0x1D, 0x48, 0xF0, 0x82, 0x30, 0x8B, 0x1D, 0x48, 0x30, 0x83, 0x70, 0x8B
        .byte 0x1C, 0x48, 0x70, 0x83, 0xB0, 0x8B, 0x1C, 0x48, 0xB0, 0x83, 0xF0, 0x8B, 0x1B, 0x48, 0xF0, 0x83
        .byte 0x30, 0x8C, 0x2F, 0x20, 0x30, 0x84, 0x71, 0x8D, 0xC0, 0x22, 0xD2, 0x01, 0x10, 0x1C, 0x01, 0x43
        .byte 0x70, 0x8D, 0x19, 0x43, 0x71, 0x85, 0xA0, 0x23, 0x5B, 0x00, 0xF0, 0x18, 0x01, 0x21, 0x01, 0x60
        .byte 0xA6, 0x22, 0x52, 0x00, 0xB0, 0x18, 0x01, 0x60, 0x02, 0x9B, 0x01, 0x2B, 0x39, 0xD0, 0x03, 0x98
        .byte 0x0F, 0x28, 0x23, 0xDC, 0x44, 0x00, 0x24, 0x18, 0xA4, 0x00, 0x24, 0x1A, 0xE4, 0x01, 0x0C, 0x4D
        .byte 0x65, 0x19, 0x0C, 0x49, 0x64, 0x18, 0x2F, 0xF0, 0x0B, 0xF8, 0x0B, 0x4B, 0x29, 0x1C, 0x22, 0x1C
        .byte 0x2E, 0xF0, 0xDE, 0xFF, 0x03, 0x9A, 0x01, 0x32, 0x03, 0x92, 0x18, 0xE0, 0xC8, 0x28, 0x00, 0x00
        .byte 0x93, 0x75, 0x00, 0x00, 0xF0, 0xC8, 0x00, 0x00, 0xA0, 0x80, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00
        .byte 0x00, 0x04, 0x01, 0x02, 0x00, 0xA8, 0x00, 0x06, 0xC0, 0x02, 0x00, 0x80, 0x2E, 0xF0, 0xF0, 0xFF
        .byte 0x0C, 0x49, 0x0D, 0x4A, 0x0D, 0x4B, 0x2E, 0xF0, 0xC3, 0xFF, 0x01, 0x23, 0x02, 0x93, 0xF1, 0x8C
        .byte 0x0B, 0x48, 0x08, 0x40, 0xF1, 0x8C, 0xF0, 0x84, 0xF2, 0x8C, 0x80, 0x20, 0xF1, 0x8C, 0x10, 0x43
        .byte 0xF0, 0x84, 0x02, 0x98, 0x00, 0x28, 0x00, 0xD1, 0xA4, 0xE1, 0x00, 0x21, 0x89, 0x46, 0x18, 0x22
        .byte 0x92, 0x46, 0x9F, 0xE1, 0x00, 0x44, 0x00, 0x02, 0x00, 0x28, 0x00, 0x06, 0x00, 0x04, 0x00, 0x80
        .byte 0x7F, 0xFF, 0x00, 0x00, 0x01, 0x23, 0x99, 0x44, 0x48, 0x46, 0x10, 0x28, 0x08, 0xDC, 0x30, 0x8A
        .byte 0xBF, 0x20, 0x30, 0x82, 0x10, 0x20, 0x49, 0x46, 0x40, 0x1A, 0xB1, 0x8A, 0xB0, 0x82, 0x89, 0xE1
        .byte 0x30, 0x8A, 0x05, 0x48, 0x30, 0x82, 0x05, 0x48, 0x71, 0x8A, 0x70, 0x82, 0x00, 0x22, 0x91, 0x46
        .byte 0x19, 0x23, 0x9A, 0x46, 0x7E, 0xE1, 0x00, 0x00, 0x42, 0x3D, 0x00, 0x00, 0x0A, 0x06, 0x00, 0x00
        .byte 0x48, 0x46, 0x45, 0x28, 0x01, 0xDC, 0x01, 0x21, 0x89, 0x44, 0x40, 0x20, 0x2C, 0xF0, 0x18, 0xF8
        .byte 0x00, 0x28, 0x05, 0xD0, 0x94, 0x22, 0x52, 0x00, 0xB1, 0x18, 0x08, 0x68, 0x01, 0x38, 0x08, 0x60
        .byte 0x80, 0x20, 0x2C, 0xF0, 0x0D, 0xF8, 0x00, 0x28, 0x05, 0xD0, 0x94, 0x23, 0x5B, 0x00, 0xF1, 0x18
        .byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x94, 0x20, 0x40, 0x00, 0x34, 0x18, 0x20, 0x68, 0x00, 0x28
        .byte 0x01, 0xDA, 0x00, 0x20, 0x20, 0x60, 0x06, 0x9A, 0x11, 0x78, 0x20, 0x68, 0x88, 0x42, 0x01, 0xDB
        .byte 0x48, 0x1E, 0x20, 0x60, 0x96, 0x23, 0x5B, 0x00, 0xF0, 0x18, 0x01, 0x68, 0x20, 0x68, 0x81, 0x42
        .byte 0x06, 0xD0, 0x8D, 0x20, 0x5E, 0xF0, 0xF2, 0xFC, 0x98, 0x20, 0x40, 0x00, 0x31, 0x18, 0x8C, 0xE0
        .byte 0x09, 0x20, 0x2B, 0xF0, 0xD1, 0xFF, 0x00, 0x28, 0x00, 0xD1, 0xBF, 0xE0, 0x49, 0x46, 0x45, 0x29
        .byte 0x00, 0xDC, 0xBB, 0xE0, 0x00, 0x22, 0x91, 0x46, 0x20, 0x68, 0xC1, 0x00, 0x30, 0x1C, 0x78, 0x30
        .byte 0x40, 0x18, 0x00, 0x68, 0x00, 0x28, 0x3E, 0xD0, 0x70, 0x18, 0x74, 0x30, 0x00, 0x78, 0x01, 0x28
        .byte 0x2A, 0xD1, 0x8E, 0x20, 0x5E, 0xF0, 0xD2, 0xFC, 0x8C, 0x23, 0x5B, 0x00, 0xF1, 0x18, 0x02, 0x20
        .byte 0x08, 0x70, 0x00, 0x25, 0x0F, 0x4C, 0x00, 0x23, 0x32, 0x1C, 0xC8, 0x32, 0x28, 0x19, 0x00, 0x78
        .byte 0x10, 0x70, 0x53, 0x60, 0x08, 0x32, 0x01, 0x35, 0x08, 0x78, 0x85, 0x42, 0xF6, 0xDB, 0x90, 0x22
        .byte 0x52, 0x00, 0xB1, 0x18, 0x01, 0x20, 0x08, 0x60, 0x8E, 0x23, 0x5B, 0x00, 0xF2, 0x18, 0x94, 0x20
        .byte 0x40, 0x00, 0x31, 0x18, 0x08, 0x68, 0x10, 0x60, 0x00, 0x20, 0x08, 0x60, 0x1A, 0x21, 0x8A, 0x46
        .byte 0x84, 0xE0, 0x00, 0x00, 0x67, 0x8E, 0x0D, 0x08, 0x8F, 0x20, 0x5E, 0xF0, 0xA7, 0xFC, 0xA2, 0x22
        .byte 0x52, 0x00, 0xB0, 0x18, 0x21, 0x68, 0xC9, 0x00, 0x71, 0x18, 0x74, 0x31, 0x09, 0x78, 0x01, 0x60
        .byte 0x1C, 0x23, 0x9A, 0x46, 0x72, 0xE0, 0x91, 0x20, 0x5E, 0xF0, 0x98, 0xFC, 0x6E, 0xE0, 0x00, 0x23
        .byte 0x99, 0x46, 0x40, 0x20, 0x2B, 0xF0, 0x8C, 0xFF, 0x00, 0x28, 0x05, 0xD0, 0x94, 0x20, 0x40, 0x00
        .byte 0x31, 0x18, 0x08, 0x68, 0x01, 0x38, 0x08, 0x60, 0x80, 0x20, 0x2B, 0xF0, 0x81, 0xFF, 0x00, 0x28
        .byte 0x05, 0xD0, 0x94, 0x22, 0x52, 0x00, 0xB1, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x94, 0x23
        .byte 0x5B, 0x00, 0xF4, 0x18, 0x20, 0x68, 0x00, 0x28, 0x01, 0xDA, 0x48, 0x46, 0x20, 0x60, 0x8C, 0x21
        .byte 0x49, 0x00, 0x70, 0x18, 0x01, 0x78, 0x20, 0x68, 0x88, 0x42, 0x01, 0xDB, 0x48, 0x1E, 0x20, 0x60
        .byte 0x96, 0x22, 0x52, 0x00, 0xB0, 0x18, 0x01, 0x68, 0x20, 0x68, 0x81, 0x42, 0x08, 0xD0, 0x8D, 0x20
        .byte 0x5E, 0xF0, 0x64, 0xFC, 0x98, 0x23, 0x5B, 0x00, 0xF1, 0x18, 0x01, 0x20, 0x08, 0x60, 0x35, 0xE0
        .byte 0x09, 0x20, 0x2B, 0xF0, 0x41, 0xFF, 0x00, 0x28, 0x1A, 0xD0, 0x20, 0x68, 0xC0, 0x00, 0x31, 0x1C
        .byte 0xCC, 0x31, 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0x0E, 0xD0, 0x8F, 0x20, 0x5E, 0xF0, 0x4E, 0xFC
        .byte 0xA2, 0x21, 0x49, 0x00, 0x70, 0x18, 0x21, 0x68, 0xC9, 0x00, 0x71, 0x18, 0xC8, 0x31, 0x09, 0x78
        .byte 0x01, 0x60, 0x1C, 0x22, 0x92, 0x46, 0x19, 0xE0, 0x91, 0x20, 0x5E, 0xF0, 0x3F, 0xFC, 0x15, 0xE0
        .byte 0x02, 0x20, 0x2B, 0xF0, 0x21, 0xFF, 0x00, 0x28, 0x10, 0xD0, 0x90, 0x20, 0x5E, 0xF0, 0x36, 0xFC
        .byte 0x90, 0x23, 0x5B, 0x00, 0xF0, 0x18, 0x49, 0x46, 0x01, 0x60, 0x8E, 0x22, 0x52, 0x00, 0xB0, 0x18
        .byte 0x00, 0x68, 0x20, 0x60, 0x46, 0x23, 0x99, 0x46, 0x19, 0x20, 0x82, 0x46, 0x96, 0x21, 0x49, 0x00
        .byte 0x70, 0x18, 0x94, 0x22, 0x52, 0x00, 0xB1, 0x18, 0x09, 0x68, 0x01, 0x60, 0x72, 0xE0, 0x08, 0x4A
        .byte 0x08, 0x48, 0xD0, 0x23, 0x5B, 0x00, 0xC0, 0x18, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
        .byte 0x80, 0x18, 0x00, 0x68, 0x01, 0x21, 0x5E, 0xF0, 0xDD, 0xFC, 0x1D, 0x20, 0x82, 0x46, 0x61, 0xE0
        .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x01, 0x21, 0x89, 0x44, 0x4A, 0x46, 0x10, 0x2A
        .byte 0x05, 0xDC, 0x30, 0x8A, 0xBF, 0x20, 0x30, 0x82, 0xB0, 0x8A, 0xB2, 0x82, 0x52, 0xE0, 0x00, 0x20
        .byte 0x2C, 0xF0, 0x84, 0xFF, 0x10, 0x4B, 0x19, 0x1C, 0x01, 0x80, 0x01, 0x20, 0x2C, 0xF0, 0x9A, 0xFF
        .byte 0x00, 0x25, 0x0E, 0x4C, 0x01, 0x20, 0x02, 0x21, 0x49, 0x42, 0x60, 0xF0, 0x6D, 0xFF, 0xE5, 0x60
        .byte 0x02, 0x20, 0x0B, 0x49, 0x60, 0xF0, 0x68, 0xFF, 0x05, 0x21, 0x49, 0x42, 0x01, 0x20, 0x60, 0xF0
        .byte 0x63, 0xFF, 0xA2, 0x21, 0x49, 0x00, 0x70, 0x18, 0x00, 0x68, 0x05, 0x28, 0x2C, 0xD8, 0x80, 0x00
        .byte 0x04, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xFF, 0xFF, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
        .byte 0x01, 0x00, 0x01, 0x00, 0x7C, 0x17, 0x00, 0x08, 0x94, 0x17, 0x00, 0x08, 0xA4, 0x17, 0x00, 0x08
        .byte 0x9C, 0x17, 0x00, 0x08, 0xBC, 0x17, 0x00, 0x08, 0xA4, 0x17, 0x00, 0x08, 0xAC, 0x17, 0x00, 0x08
        .byte 0x00, 0x48, 0x0A, 0xE0, 0xCD, 0x21, 0x00, 0x08, 0x00, 0x48, 0x06, 0xE0, 0xD1, 0xCE, 0x01, 0x08
        .byte 0x00, 0x48, 0x02, 0xE0, 0x99, 0x35, 0x01, 0x08, 0x04, 0x48, 0x05, 0x4A, 0x10, 0x60, 0x10, 0x7A
        .byte 0x01, 0x30, 0x07, 0x21, 0x08, 0x40, 0x10, 0x72, 0x01, 0x20, 0x93, 0xE0, 0x19, 0xFD, 0x00, 0x08
        .byte 0x20, 0x2E, 0x00, 0x03
    _080017C8:
        ldr r2, [sp, #0x008]
        cmp r2, #0x01
        beq _080017D6
        ldrh r0, [r6, #0x08]
        adds r0, #0x01
        ldrh r1, [r6, #0x08]
        b _080017DA
    _080017D6:
        ldrh r0, [r6, #0x08]
        movs r0, #0x00
    _080017DA:
        strh r0, [r6, #0x08]
        ldrh r1, [r6, #0x0A]
        movs r0, #0xA0
        lsls r0, r0, #0x01
        cmp r1, r0
        bls _080017F4
        bl dmaq_getVBlankDmaQueue
        ldr r1, _08001860 @ =0x0203EBE0
        ldr r2, _08001864 @ =0x06008000
        ldr r3, _08001868 @ =0x81000020
        bl dmaq_enqueue
    _080017F4:
        ldr r0, [r6, #0x2C]
        adds r0, #0x01
        str r0, [r6, #0x2C]
        cmp r0, #0x08
        ble _0800182C
        movs r1, #0x00
        str r1, [r6, #0x2C]
        ldr r0, [r6, #0x30]
        adds r0, #0x01
        str r0, [r6, #0x30]
        cmp r0, #0x04
        ble _0800180E
        str r1, [r6, #0x30]
    _0800180E:
        ldr r1, _0800186C @ =0x080D8E6C
        ldr r0, [r6, #0x30]
        lsls r0, r0, #0x02
        adds r0, r0, r1
        ldr r0, [r0, #0x00]
        ldr r1, [r6, #0x34]
        bl LZ77UnCompWram
        bl dmaq_getVBlankDmaQueue
        ldr r1, [r6, #0x34]
        ldr r2, _08001870 @ =0x06006000
        ldr r3, _08001874 @ =0x80000A00
        bl dmaq_enqueue
    _0800182C:
        adds r0, r6, #0x0
        bl sub_8000350
        adds r0, r6, #0x0
        bl sub_80001D8
        movs r3, #0xA4
        lsls r3, r3, #0x01
        adds r4, r6, r3
        ldr r0, [r4, #0x00]
        cmp r0, #0x00
        beq _08001850
        adds r0, r6, #0x0
        bl sub_80006FC
        adds r0, r6, #0x0
        bl sub_80008A4
    _08001850:
        ldr r0, [sp, #0x000]
        cmp r0, #0x01
        beq _080018A6
        cmp r0, #0x01
        bgt _08001878
        cmp r0, #0x00
        beq _08001888
        b _0800189C
    _08001860: .4byte 0x0203EBE0
    _08001864: .4byte 0x06008000
    _08001868: .4byte 0x81000020
    _0800186C: .4byte 0x080D8E6C
    _08001870: .4byte 0x06006000
    _08001874: .4byte 0x80000A00
    _08001878:
        ldr r2, [sp, #0x000]
        cmp r2, #0x02
        beq _080018D4
        mov r3, r10
        lsls r3, r3, #0x02
        str r3, [sp, #0x014]
        bl _08001060
    _08001888:
        ldr r0, [r4, #0x00]
        movs r1, #0x35
        cmp r0, #0x00
        beq _08001892
        movs r1, #0x33
    _08001892:
        adds r0, r1, #0x0
        bl m4aSongNumStart
        movs r0, #0x01
        str r0, [sp, #0x000]
    _0800189C:
        mov r1, r10
        lsls r1, r1, #0x02
        str r1, [sp, #0x014]
        bl _08001060
    _080018A6:
        ldr r0, _080018D0 @ =0x030069F0
        ldrb r0, [r0, #0x00]
        mov r2, r10
        lsls r2, r2, #0x02
        str r2, [sp, #0x014]
        cmp r0, #0x02
        bhi _080018B8
        bl _08001060
    _080018B8:
        ldr r3, [sp, #0x004]
        adds r3, #0x01
        str r3, [sp, #0x004]
        cmp r3, #0x17
        bgt _080018C6
        bl _08001060
    _080018C6:
        movs r0, #0x02
        str r0, [sp, #0x000]
        bl _08001060
        lsls r0, r0, #0x00
    _080018D0:
        ldr r0, [r6, #0x1C]
        lsls r0, r0, #0x0C
    _080018D4:
        movs r0, #0x34
        bl m4aSongNumStart
        movs r1, #0x03
        str r1, [sp, #0x000]
        mov r2, r10
        lsls r2, r2, #0x02
        str r2, [sp, #0x014]
        bl _08001060
        add sp, #0x01C
        pop {r3, r4, r5}
        mov r8, r3
        mov r9, r4
        mov r10, r5
        pop {r4, r5, r6, r7}
        pop {r1}
        bx r1
        thumb_func_start title_vcount70
    title_vcount70: @ 080018F8
        ldr r0, _08001904 @ =0x03000000
        ldr r0, [r0, #0x00]
        ldr r1, _08001908 @ =0x0400004A
        ldrh r0, [r0, #0x20]
        strh r0, [r1, #0x00]
        bx lr
    _08001904: .4byte 0x03000000
    _08001908: .4byte 0x0400004A
